---

- name: Install dependencies for Docker
  yum:
    name: yum-utils
    state: present

- name: Remove previous repo files
  ansible.builtin.shell: "rm -rf /etc/yum.repos.d/kubernetes.repo;rm -rf /etc/yum.repos.d/docker-ce.repo"

- name: Add Docker repo
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docer-ce.repo


- name: Add yum repo
  yum_repository:
    name: kubernetes
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    enabled: yes
    gpgcheck: no
    repo_gpgcheck: no
    description: "Yum respository for kubernetes"

- name: checking if any existing Cluster on System"
  package_facts:
    manager: auto

- name: Searching for Prevoius Kubernetes cluster files if any Nodes
  stat:
    path: "/etc/kubernetes/manifests/"
  register: kube_dir

- name: Reset the exisiting cluster
  command: "kubeadm reset --force"
  when: "'kubeadm' in ansible_facts.packages and  kube_dir.stat.exists"
  ignore_errors: True

- name: Remove kubeadm files
  command: "rm -rf $HOME/.kube/config file"

- name: Removing exisiting POD networks
  command: "rm -rf /etc/cni/net.d/"


- name: Yum update_cache
  shell: "yum clean all;yum-complete-transaction --cleanup-only"

- name: Remove Docker and kubernetes from worker and drain if exists
  yum:
    name: "{{ packages }}"
    state: absent
  vars:
    packages:
    - docker*
    - kubeadm
#    when: inventory_hostname in groups['kubenode']
#
